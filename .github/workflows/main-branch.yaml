name: Main Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build and Push Docker Image to ECR
        uses: cloudposse/github-actions-workflows/.github/workflows/ci-dockerized-app-build.yml@main  # This should be moved to the 'uses' key of the 'build' job
        with:
          organization: ${{ github.event.repository.owner.login }}
          repository: ${{ github.event.repository.name }}

  deploy:
    name: Deploy Docker Image to ECS
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Deploy Docker Image to ECS
        uses: cloudposse/github-actions-workflows/.github/workflows/cd-ecs.yml@main  # This should be moved to the 'uses' key of the 'deploy' job
        with:
          image: ${{ needs.build.outputs.image }}
          tag: ${{ needs.build.outputs.tag }}
          repository: ${{ github.event.repository.name }}
          environment: dev
          spacelift-organization: ${{ github.event.repository.owner.login }}

  release:
    name: Draft New Release
    runs-on: ubuntu-latest
    needs:
      - deploy
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Draft New Release
        uses: cloudposse/github-actions-workflows/.github/workflows/controller-draft-release.yml@main  # This should be moved to the 'uses' key of the 'release' job

env:
  GHA_SECRET_OUTPUT_PASSPHRASE: ${{ secrets.GHA_SECRET_OUTPUT_PASSPHRASE }}
  ECR_REGION: ${{ secrets.ECR_REGION }}
  ECR_IAM_ROLE: ${{ secrets.ECR_IAM_ROLE }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  GITHUB_PRIVATE_ACTIONS_PAT: ${{ secrets.GITHUB_PRIVATE_ACTIONS_PAT }}
  SPACELIFT_API_KEY_ID: ${{ secrets.SPACELIFT_API_KEY_ID }}
  SPACELIFT_API_KEY_SECRET: ${{ secrets.SPACELIFT_API_KEY_SECRET }}
