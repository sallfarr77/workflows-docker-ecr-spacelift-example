name: Main Branch Workflow

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      organization:
        description: "Repository owner organization (ex. acme for repo acme/example)"
        required: false
        default: ${{ github.event.repository.owner.login }}
        type: string
      repository:
        description: "Repository name (ex. example for repo acme/example)"
        required: false
        default: ${{ github.event.repository.name }}
        type: string
      spacelift-organization:
        description: "Spacelift organization name"
        type: string
        required: true

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  do:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Main Branch Workflow
        uses: cloudposse/github-actions-workflows-docker-ecr-spacelift/.github/workflows/main-branch.yml@main
        with:
          organization: ${{ github.event.repository.owner.login }}
          repository: ${{ github.event.repository.name }}
          spacelift-organization: ${{ github.event.repository.owner.login }}
        env:
          PUBLIC_REPO_ACCESS_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          GHA_SECRET_OUTPUT_PASSPHRASE: ${{ secrets.GHA_SECRET_OUTPUT_PASSPHRASE }}
          ECR_REGION: ${{ secrets.ECR_REGION }}
          ECR_IAM_ROLE: ${{ secrets.ECR_IAM_ROLE }}
          SPACELIFT_API_KEY_ID: ${{ secrets.SPACELIFT_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ secrets.SPACELIFT_API_KEY_SECRET }}

  ci:
    runs-on: ubuntu-latest
    needs: do
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build and Test Docker Image
        uses: cloudposse/github-actions-workflows/.github/workflows/ci-dockerized-app-build.yml@main
        with:
          organization: ${{ github.event.inputs.organization }}
          repository: ${{ github.event.inputs.repository }}
        secrets:
          ecr-region: ${{ secrets.ecr-region }}
          ecr-iam-role: ${{ secrets.ecr-iam-role }}
          registry: ${{ secrets.registry }}
          secret-outputs-passphrase: ${{ secrets.secret-outputs-passphrase }}

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Deploy Docker Image to ECS
        uses: cloudposse/github-actions-workflows/.github/workflows/cd-ecs.yml@main
        with:
          image: ${{ needs.ci.outputs.image }}
          tag: ${{ needs.ci.outputs.tag }}
          repository: ${{ github.event.inputs.repository }}
          environment: dev
          spacelift-organization: ${{ github.event.inputs.spacelift-organization }}
        secrets:
          secret-outputs-passphrase: ${{ secrets.secret-outputs-passphrase }}
          github-private-actions-pat: ${{ secrets.github-private-actions-pat }}
          spacelift-api-key-id: ${{ secrets.spacelift-api-key-id }}
          spacelift-api-key-secret: ${{ secrets.spacelift-api-key-secret }}

  release:
    runs-on: ubuntu-latest
    needs: cd
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Draft New Release
        uses: cloudposse/github-actions-workflows/.github/workflows/controller-draft-release.yml@main
        secrets:
          github-private-actions-pat: ${{ secrets.github-private-actions-pat }}
